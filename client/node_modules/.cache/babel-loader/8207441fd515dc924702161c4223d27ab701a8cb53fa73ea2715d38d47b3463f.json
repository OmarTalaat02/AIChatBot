{"ast":null,"code":"var _jsxFileName = \"C:\\\\IntelliJProjects\\\\FullStackProjects\\\\RealTimeChatBot\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client'; // Import Socket.io client\n\n// Connect to the backend server\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:5000'); // Make sure to use the correct port\n\nfunction App() {\n  _s();\n  // State to manage messages and input field\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  // On component mount, listen for incoming messages from the server\n  useEffect(() => {\n    socket.on('message', msg => {\n      setMessages(prevMessages => [...prevMessages, msg]); // Append new message to chat\n    });\n  }, []);\n\n  // Function to handle sending messages\n  const sendMessage = () => {\n    if (input) {\n      socket.emit('message', input); // Send the input message to the server\n      setInput(''); // Clear the input field\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Real-Time Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: '1px solid #ddd',\n        padding: '10px',\n        height: '300px',\n        overflowY: 'scroll'\n      },\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: msg\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Type a message...\",\n      style: {\n        marginTop: '10px',\n        width: '80%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      style: {\n        marginLeft: '10px'\n      },\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"9O8vdW2/zxnqNWKJ7NIr/2i0F2U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","socket","App","_s","messages","setMessages","input","setInput","on","msg","prevMessages","sendMessage","emit","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","border","height","overflowY","map","index","type","value","onChange","e","target","placeholder","marginTop","width","onClick","marginLeft","_c","$RefreshReg$"],"sources":["C:/IntelliJProjects/FullStackProjects/RealTimeChatBot/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';  // Import Socket.io client\n\n// Connect to the backend server\nconst socket = io('http://localhost:5000');  // Make sure to use the correct port\n\nfunction App() {\n  // State to manage messages and input field\n  const [messages, setMessages] = useState([]);\n  const [input, setInput] = useState('');\n\n  // On component mount, listen for incoming messages from the server\n  useEffect(() => {\n    socket.on('message', (msg) => {\n      setMessages((prevMessages) => [...prevMessages, msg]);  // Append new message to chat\n    });\n  }, []);\n\n  // Function to handle sending messages\n  const sendMessage = () => {\n    if (input) {\n      socket.emit('message', input);  // Send the input message to the server\n      setInput('');  // Clear the input field\n    }\n  };\n\n  return (\n      <div style={{ padding: '20px' }}>\n        <h1>Real-Time Chatbot</h1>\n\n        {/* Chat messages display */}\n        <div style={{ border: '1px solid #ddd', padding: '10px', height: '300px', overflowY: 'scroll' }}>\n          {messages.map((msg, index) => (\n              <p key={index}>{msg}</p>\n          ))}\n        </div>\n\n        {/* Input field for sending messages */}\n        <input\n            type=\"text\"\n            value={input}\n            onChange={(e) => setInput(e.target.value)}\n            placeholder=\"Type a message...\"\n            style={{ marginTop: '10px', width: '80%' }}\n        />\n\n        {/* Button to send messages */}\n        <button onClick={sendMessage} style={{ marginLeft: '10px' }}>\n          Send\n        </button>\n      </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB,CAAC,CAAE;;AAEpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAE;;AAE7C,SAASI,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACdI,MAAM,CAACO,EAAE,CAAC,SAAS,EAAGC,GAAG,IAAK;MAC5BJ,WAAW,CAAEK,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,GAAG,CAAC,CAAC,CAAC,CAAE;IAC1D,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAME,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIL,KAAK,EAAE;MACTL,MAAM,CAACW,IAAI,CAAC,SAAS,EAAEN,KAAK,CAAC,CAAC,CAAE;MAChCC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;IACjB;EACF,CAAC;EAED,oBACIP,OAAA;IAAKa,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9Bf,OAAA;MAAAe,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG1BnB,OAAA;MAAKa,KAAK,EAAE;QAAEO,MAAM,EAAE,gBAAgB;QAAEN,OAAO,EAAE,MAAM;QAAEO,MAAM,EAAE,OAAO;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAP,QAAA,EAC7FX,QAAQ,CAACmB,GAAG,CAAC,CAACd,GAAG,EAAEe,KAAK,kBACrBxB,OAAA;QAAAe,QAAA,EAAgBN;MAAG,GAAXe,KAAK;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNnB,OAAA;MACIyB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpB,KAAM;MACbqB,QAAQ,EAAGC,CAAC,IAAKrB,QAAQ,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC,mBAAmB;MAC/BjB,KAAK,EAAE;QAAEkB,SAAS,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAM;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eAGFnB,OAAA;MAAQiC,OAAO,EAAEtB,WAAY;MAACE,KAAK,EAAE;QAAEqB,UAAU,EAAE;MAAO,CAAE;MAAAnB,QAAA,EAAC;IAE7D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEZ;AAAChB,EAAA,CA9CQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAgDZ,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}